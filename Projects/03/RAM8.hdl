// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    //// RAM8
    
    //Writing
    DMux8Way(in=load , sel=address , a=R0load , b=R1load , c=R2load , d=R3load , e=R4load , f=R5load , g=R6load , h=R7load );
    Register(in=in , load=R0load , out=R0out );
    Register(in=in , load=R1load , out=R1out );
    Register(in=in , load=R2load , out=R2out );
    Register(in=in , load=R3load , out=R3out );
    Register(in=in , load=R4load , out=R4out );
    Register(in=in , load=R5load , out=R5out );
    Register(in=in , load=R6load , out=R6out );
    Register(in=in , load=R7load , out=R7out );

    //Reading
    Mux8Way16(a=R0out , b=R1out , c=R2out , d=R3out , e=R4out , f=R5out , g=R6out , h=R7out , sel=address , out=out );
    
}
